.menu {
    position: absolute; // Absolute positioning
    // Conditional styling based on $uniMargin variable
    .menuIcon {
        fill: $menuButtonCol; // Fill color for menu button
        stroke: $menuButtonCol; // Stroke color for menu button
        height: calc($waybarHeight * 9);
        width: calc($waybarHeight / 1.75);
        transition: none;
        z-index: 9999980;
    }
    .menuLogo {
        font-style: normal;
        text-decoration: none;
        font-family: 'Open Sans';
        fill: #00000000; // Fill color for menu button
        stroke: #00000000; // Stroke color for menu button
        color: transparent;
        user-select: none;
        cursor: default;
        font-size: 0;
    }
    width: calc(perToInt($waybarHeight) - $uniMargin); // Width calculation for menu
    height: calc(($waybarHeight) - 2.25 * (2 * $uniMargin)); // Height calculation for menu
    top: calc(($uniMargin));
    left: $uniMargin;
    border: $borderThickness solid $borderCol; // Border styling
    border-radius: $borderRad; // Border radius
    box-shadow: $shadowRad $shadowCol; // Box shadow styling
    background-color: $windowCol; // Background color
    // Backdrop filter for visual effects
    backdrop-filter:
        blur($windowBlur)
        brightness($windowBrightness)
        contrast($windowContrast);
    box-sizing: border-box; // Ensures consistent box model
    display: flex; // Flex display for inner content
    align-items: center; // Vertical alignment
    justify-content: center; // Horizontal alignment
    text-align: center; // Text alignment
    // Transition effects for various properties
    transition:
    background-color $transitionSpeed ease,
    width $transitionSpeed ease,
    height $transitionSpeed ease,
    left $transitionSpeed ease,
    bottom $transitionSpeed ease,
    right $transitionSpeed ease,
    top $transitionSpeed ease,
    transform $transitionSpeed ease,
    border-radius $transitionSpeed ease,
    stroke $transitionSpeed ease,
    border $transitionSpeed ease,
    box-shadow $transitionSpeed ease,
    backdrop-filter $transitionSpeed ease,
    fill $transitionSpeed ease,
    font-size $transitionSpeed ease;
}

.menu:hover {
    // Conditional hover styling for menu
    width: calc(((perToInt($waybarHeight) - $uniMargin) * $hoverCoefficient) + $hoverConst); // Width adjustment on hover
    height: calc(((($waybarHeight) - 2.25 * (2 * $uniMargin)) * $hoverCoefficient) + $hoverConst); // Height adjustment on hover
    left: calc($uniMargin - (((100% - (2 * $uniMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2)); // Left position adjustment on hover
    top: calc($uniMargin - (((100% - $uniMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2)); // Top position adjustment on hover
    border-radius: calc(($borderRad * $hoverBorderRad) + (((($waybarHeight - ($uniMargin) * $hoverCoefficient) + ($hoverConst * $uniMargin / 1vh))) - ($waybarHeight - ($uniMargin))) + (($borderRad * $hoverBorderRad) / ((($borderRad * $hoverBorderRad) / 1px) / 2)));
    background-color: $hoverWindowCol; // Background color on hover
    box-shadow: $hoverShadowRad $hoverShadowCol; // Box shadow styling
    border: $hoverBorderThickness solid $hoverBorderCol; // Border styling on hover
    // Backdrop filter adjustments on hover
    backdrop-filter:
        blur($hoverWindowBlur)
        brightness($hoverWindowBrightness)
        contrast($hoverWindowContrast);
}

.menu.menuOpen {
    position: absolute; // Absolute positioning
    // Conditional styling based on $uniMargin variable
    .menuIcon {
        fill: #00000000; // Fill color for menu button
        stroke: #00000000; // Stroke color for menu button
        height: 0.00000000001;
        width: 0.00000000001;
    }
    .menuLogo {
        fill: $menuButtonCol; // Fill color for menu button
        stroke: $menuButtonCol; // Stroke color for menu button
        color: aliceblue;
        cursor: pointer;
        font-size: calc(5 * ($waybarHeight / 12.5) * ($waybarHeight / 10vh));
        font: 'Open Sans';
        text-decoration: none;
    }
    width: $fullMenuSize; // Width calculation for menu
    height: calc(($waybarHeight) - 2.25 * (2 * $uniMargin)); // Height calculation for menu
    top: calc(($uniMargin));
    left: $uniMargin;
    border: $borderThickness solid $borderCol; // Border styling
    border-radius: $borderRad; // Border radius
    background-color: $activeWindowCol; // Background color
    // Backdrop filter for visual effects
    backdrop-filter:
        blur(calc($hoverWindowBlur / 8))
        brightness($windowBrightness)
        contrast($windowContrast);
    box-sizing: border-box; // Ensures consistent box model
    display: flex; // Flex display for inner content
    align-items: center; // Vertical alignment
    justify-content: center; // Horizontal alignment
    text-align: center; // Text alignment
    // Transition effects for various properties
    transition:
        background-color $transitionSpeed ease,
        width $transitionSpeed ease,
        height $transitionSpeed ease,
        left $transitionSpeed ease,
        bottom $transitionSpeed ease,
        right $transitionSpeed ease,
        top $transitionSpeed ease,
        transform $transitionSpeed ease,
        border-radius $transitionSpeed ease,
        stroke $transitionSpeed ease,
        border $transitionSpeed ease,
        box-shadow $transitionSpeed ease,
        backdrop-filter $transitionSpeed ease,
        fill $transitionSpeed ease;

}

.menu.menuOpen:hover {
    width: calc($fullMenuSize * $hoverCoefficient + $hoverConst); // Width adjustment on hover
    height: calc((($waybarHeight) - 2.25 * (2 * $uniMargin)) * $hoverCoefficient + $hoverConst); // Height adjustment on hover
    left: calc($uniMargin - (((100% - (2 * $uniMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2)); // Left position adjustment on hover
    top: calc($uniMargin - (((100% - $uniMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2)); // Top position adjustment on hover
    border-radius: calc(($borderRad * $hoverBorderRad) + (((($waybarHeight - ($uniMargin) * $hoverCoefficient) + ($hoverConst * $uniMargin / 1vh))) - ($waybarHeight - ($uniMargin))) + (($borderRad * $hoverBorderRad) / ((($borderRad * $hoverBorderRad) / 1px) / 2)));
    box-shadow: $hoverShadowRad $hoverShadowCol; // Box shadow styling
    background-color: $activeWindowCol; // Background color
    border: $hoverBorderThickness solid $hoverBorderCol; // Border styling on hover
    // Backdrop filter adjustments on hover
    backdrop-filter:
        blur(calc($hoverWindowBlur / 6))
        brightness(calc($hoverWindowBrightness - 0.3))
        contrast($hoverWindowContrast);
}
.fullMenu {
    position: absolute; // Absolute positioning
    width: $fullMenuSize; // Width calculation for menu
    height: calc(100% - $waybarHeight - ($botBarHeight) + $uniMargin * 1.5);  // Height calculation for menu
    bottom: calc(($botBarHeight + $uniMargin));
    left: calc(-$uniMargin * 2 - $fullMenuSize);
    border: $borderThickness solid $borderCol; // Border styling
    border-radius: $borderRad; // Border radius
    background-color: $activeWindowCol; // Background color
    // Backdrop filter for visual effects
    backdrop-filter:
        blur(calc($hoverWindowBlur / 8))
        brightness($windowBrightness)
        contrast($windowContrast);
    box-sizing: border-box; // Ensures consistent box model
    display: flex; // Flex display for inner content
    align-items: center; // Vertical alignment
    justify-content: center; // Horizontal alignment
    text-align: center; // Text alignment
    // Transition effects for various properties
    transition:
        background-color $transitionSpeed ease,
        width $transitionSpeed ease,
        height $transitionSpeed ease,
        left $transitionSpeed ease,
        bottom $transitionSpeed ease,
        right $transitionSpeed ease,
        top $transitionSpeed ease,
        transform $transitionSpeed ease,
        border-radius $transitionSpeed ease,
        stroke $transitionSpeed ease,
        border $transitionSpeed ease,
        box-shadow $transitionSpeed ease,
        backdrop-filter $transitionSpeed ease,
        fill $transitionSpeed ease;
}
.menuOpen-fullMenu {
    width: $fullMenuSize; // Width calculation for menu
    height: calc(100% - $waybarHeight - ($botBarHeight) + $uniMargin * 1.5);  // Height calculation for menu
    bottom: calc(($botBarHeight + $uniMargin));
    left: $uniMargin;
    border: $borderThickness solid $borderCol; // Border styling
    border-radius: $borderRad; // Border radius
    background-color: $activeWindowCol; // Background color
    // Backdrop filter for visual effects
    backdrop-filter:
        blur(calc($hoverWindowBlur / 8))
        brightness($windowBrightness)
        contrast($windowContrast);
    box-sizing: border-box; // Ensures consistent box model
    display: flex; // Flex display for inner content
    align-items: center; // Vertical alignment
    justify-content: center; // Horizontal alignment
    text-align: center; // Text alignment
    // Transition effects for various properties
    transition:
        background-color $transitionSpeed ease,
        width $transitionSpeed ease,
        height $transitionSpeed ease,
        left $transitionSpeed ease,
        bottom $transitionSpeed ease,
        right $transitionSpeed ease,
        top $transitionSpeed ease,
        transform $transitionSpeed ease,
        border-radius $transitionSpeed ease,
        stroke $transitionSpeed ease,
        border $transitionSpeed ease,
        box-shadow $transitionSpeed ease,
        backdrop-filter $transitionSpeed ease,
        fill $transitionSpeed ease;
}

.menuOpen-fullMenu:hover {

    width: calc(($fullMenuSize * $hoverCoefficient) + $hoverConst); // Width calculation for menu
    height: calc(((100% - $waybarHeight) * $hoverCoefficient) + $hoverConst - ($botBarHeight) + 1.5 * $uniMargin); // Height calculation for menu
    bottom: calc((($uniMargin) + ($botBarHeight)) * $hoverCoefficient - ($hoverConst / 2));
    left: calc($uniMargin - (((100% - (2 * $uniMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));
    border-radius: calc(($borderRad * $hoverBorderRad) + (((($waybarHeight - ($uniMargin) * $hoverCoefficient) + ($hoverConst * $uniMargin / 1vh))) - ($waybarHeight - ($uniMargin))) + (($borderRad * $hoverBorderRad) / ((($borderRad * $hoverBorderRad) / 1px) / 2)));
    box-shadow: $hoverShadowRad $hoverShadowCol; // Box shadow styling
    background-color: $activeWindowCol; // Background color
    border: $hoverBorderThickness solid $hoverBorderCol; // Border styling on hover
    // Backdrop filter adjustments on hover
    backdrop-filter:
        blur(calc($hoverWindowBlur / 6))
        brightness(calc($hoverWindowBrightness - 0.3))
        contrast($hoverWindowContrast);
}
