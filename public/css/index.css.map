{"version":3,"sourceRoot":"","sources":["..\\scss\\index.scss","..\\scss\\_variables.scss","..\\scss\\_mainWindow.scss","..\\scss\\_waybar.scss","..\\scss\\_iframeWindow.scss","..\\scss\\_menu.scss","..\\scss\\_botBar.scss","..\\scss\\_popups.scss"],"names":[],"mappings":"AAAQ;ACAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ACAA;EACI;EAEI;EACA;EACA;EACA,ODoBI;ECbR;EACA,eDmBQ;EClBR;EACA,kBDDQ;ECER,iBACI;EAGJ;EACA;EACA;EACA;EACA;EACA,YACI;;;AAeR;EACI;;AACA;EAEQ;EACA;EACA;EACA;EACA;EAQJ;EACA;EACA;EACA,iBACI;;;AAMZ;EAEQ;EACA;EACA;EACA,OD/CI;ECsDR,iBACI;;;AAKR;EACI;;AACA;EAEQ;EACA;EACA;EACA;EAOJ,iBACI;;;ACrGZ;EACI;EAEI;EACA;EACA;EACA,OFoBI;EEbR;EACA,eFmBQ;EElBR;EACA,kBFDQ;EEER,iBACI;EAGJ;EACA;EACA;EACA;EACA;EACA,YACI;;;AAgBR;EAEQ;EACA;EACA;EACA;EACA;EAQJ;EACA;EACA,kBFCa;EEAb,iBACI;;;AAKR;EAEQ;EACA;EACA;EACA,OF7CI;EEoDR,iBACI;;;AAKR;EAEQ;EACA;EACA;EACA;;;ACzFR;EACI;EAEI;EACA;EACA;EACA,OHoBI;EGbR;EACA,eHmBQ;EGlBR;EACA;EACA;EACA;EACA;EACA;EACA,YACI;;;AAYR;EACI;;AACA;EAEQ;EACA;EACA;EACA;EACA;EAQJ;EACA;;;AAIR;EAEQ;EACA;EACA;EACA,OHlCI;;;AG2CZ;EACI;;AACA;EAEQ;EACA;EACA;EACA;;;AC5EZ;EACI;EAoBI;EACA;EACA;EACA,MJEI;EIKR;EACA,eJCQ;EIAR;EACA,kBJnBQ;EIqBR,iBACI;EAGJ;EACA;EACA;EACA;EACA;EAEA,YACI;;AA5CJ;EACI,MJsCQ;EIrCR,QJqCQ;EIpCR;EACA;;AAEJ;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;AA6CR;EAGQ;EACA;EACA;EACA;EACA;EAQJ,kBJlBa;EImBb;EACA;EAEA,iBACI;;;AAKR;EACI;EAkBI;EACA;EACA;EACA,MJpFI;EI2FR;EACA,eJrFQ;EIsFR,kBJzEc;EI2Ed,iBACI;EAGJ;EACA;EACA;EACA;EACA;EAEA,YACI;;AAzCJ;EACI;EACA;EACA;EACA;;AAEJ;EACI,MJxDQ;EIyDR,QJzDQ;EI0DR;EACA;EACA;EACA;EACA;;;AA2CR;EAEQ;EACA;EACA;EACA;EACA;EAQJ;EACA,kBJpHc;EIqHd;EAEA,iBACI;;;AAIR;EACI;EAEI;EACA;EACA;EACA;EAOJ;EACA;EACA,kBJvI0B;EIwI1B,YACI;;;AAeR;EAEQ;EACA;EACA;EACA,MJrLI;EI4LR;EACA,eJtLQ;EIuLR,kBJ1Kc;EI4Kd,iBACI;EAGJ;EACA;EACA;EACA;EACA;EAEA,YACI;;;AAgBR;EAEQ;EACA;EACA;EACA;EACA;EAQJ;EACA,kBJtNc;EIuNd;EAEA,iBACI;;;ACxQR;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,eLoBQ;EKnBR;EACA,iBACI;EAGJ;EACA,YACI;EAcJ;EACA;EACA;EACA,kBLvBQ;;AKyBR;EACI;EACA;EACA;EACA;EACA,kBLeS;EKdT,iBACI;;;AAMZ;EACI;;;AAGJ;EACI;EACA;EACA;;AAEA;EACI;EACA;;;AAIR;EACI;EACA;EACA;;AAEA;EACI;;;AAIR;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;EACI;EACA;EACA;;AAEA;EACI;;;AAIR;EACI;EACA;EACA;;AAEA;EACI;;;AAIR;EACI;EACA;EACA;;AAEA;EACI;;;AAIR;EACI;EACA;EACA;;AAEA;EACI;EACA;;;ACnIR;EACI;;;AAGJ;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,eNUQ;EMTR;EACA,iBACI;EAGJ;EACA,YACI;EAaJ;EACA;EACA,kBN/BQ;;AMgCR;EACI;EACA;EACA;EACA;EACA;EACA,kBNOS;EMNT,iBACI;;AAIR;EACI;;;AAIR;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AACA;EACI;;;AAIR;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,eNjEQ;EMkER;EACA,iBACI;EAGJ;EACA,YACI;EAaJ;EACA;EACA,kBN1GQ;;AM2GR;EACI;EACA;EACA;EACA;EACA;EACA,kBNpES;EMqET,iBACI;;AAIR;EACI;;;AAIR;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AACA;EACI;;;AAOR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;APnJA;EACI;EACA;EACA;EAEI,kBCJA;EDKA;EACA;EAIJ;;;AAGJ;EACI;EACA;EACA;EACA;EACA;EACA;;;AAGJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA","sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&display=swap');\r\n\r\n@import \"_variables.scss\"; // Importing global variables\r\n@import \"_mainWindow.scss\"; // Rest of the imports are self explanitory\r\n@import \"_waybar.scss\";\r\n@import \"_iframeWindow.scss\";\r\n@import \"_menu.scss\";\r\n@import \"_botBar.scss\";\r\n@import \"_popups.scss\";\r\n\r\nhtml, body {\r\n    margin: 0;\r\n    padding: 0;\r\n    height: 100%;\r\n    @if str-index($bgCol, \"url\") {\r\n        background-image: $bgCol; // Background image for html\r\n        background-repeat: no-repeat;\r\n        background-size: cover;\r\n    } @else {\r\n        background-color: $bgCol;\r\n    }\r\n    overflow: hidden; // Prevents scrolling\r\n}\r\n\r\n#particles-js {\r\n    position: fixed; // Fixed position for particle effect\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    z-index: 0; // Behind other content\r\n}\r\n\r\n/* I The rest is just notes and such\r\n\r\n// Future feature notes:\r\n// add hoverShadowCol\r\n// add menu stuff\r\n// add percentage bar\r\n// find icons for waybar\r\n// add credits and dynamic linking(to my github or other projects)\r\n\r\n// convert to react, also make it so all global variables are defined at runtime. Once that is done, make it so particles.js only appears when the menu is opened, and its only the size of the menu.\r\n\r\n// in the future make it so when you hover over a window, its border changes color to become brighter, and it becomes slightly bigger by like 5-20% ish\r\n// ($hoverConst * ($uniMargin / 1%))\r\n// example = border-radius: calc($borderRad + ((((perToInt($waybarHeight) * 1vh - $sideMargin) * $hoverCoefficient) + ($hoverConst * perToInt($sideMargin))) - (perToInt($waybarHeight) * 1vh - $uniMargin)));\r\n// border-radius: calc($borderRad + ((width) - (hover height)))\r\n// border-radius: calc($borderRad + ((((((perToInt($waybarHeight) * 1vh - $uniMargin) * $hoverCoefficient) + ($hoverConst * perToInt($uniMargin)))) - (($waybarHeight) - 2.25 * ($uniMargin))) + (1 / ($borderRad / 1px))));\r\n// when click make it so iframe and mainWindow element become smaller when menu is clicked on. Make it procedural with if statements.\r\n// calc(((($waybarHeight) - 2.25 * (2 * $uniMargin)) * $hoverCoefficient) + ($hoverConst * perToInt($uniMargin)))\r\n\r\n// I wrote all of this my self, its all mostly free to use, just credit me pls if you are going to use it\r\n\r\n// General notes, code snippets, or ideas:\r\n\r\n// when it comes to the svg for the xorro logo in the menu, I used: https://danmarshall.github.io/google-font-to-svg-path/\r\n// the size is set to 300, and the rest is shown in my svg implamentation in the html ;3\r\n\r\n// width: calc((((perToInt($waybarHeight) * 1vh - $sideMargin) * $hoverCoefficient) + $hoverConst));\r\n\r\n// width: calc((((perToInt($waybarHeight) * 1vh - $sideMargin) * (1 / $hoverCoefficient)) - $hoverConst));\r\n\r\n// height: calc(((($waybarHeight) - 2.25 * (2 * $bottomMargin)) * $hoverCoefficient) + $hoverConst);\r\n\r\n// height: calc(((($waybarHeight) - 2.25 * (2 * $bottomMargin)) * (1 / $hoverCoefficient)) - $hoverConst);\r\n\r\n// calc((((perToInt($waybarHeight) * 1vh - $sideMargin) * $hoverCoefficient) - (perToInt($waybarHeight) * 1vh - $sideMargin)) - $hoverConst));\r\n\r\n// calc(((perToInt($waybarHeight) * 1vh - ($sideMargin))) + (((($waybarHeight) - 2.25 * (2 * $sideMargin)) * $hoverCoefficient) + $hoverConst));\r\n\r\n\r\n//.menuOpen-waybar {\r\n//    @if $uniMargin != 0% {\r\n//        width: calc((100% - (2 * $uniMargin)) - perToInt($waybarHeight) * 1vh); // Width calculation for waybar\r\n//        height: calc(($waybarHeight) - 2.25 * (2 * $uniMargin)); // Height adjustment for waybar\r\n//        top: calc(2 * ($uniMargin));\r\n//        right: $uniMargin;\r\n//    } @else {\r\n//        width: calc((100% - (2 * $sideMargin)) - perToInt($waybarHeight) * 1vh);\r\n//        height: calc((($waybarHeight) - (2.25 * (2 * $bottomMargin))));\r\n//        top: calc(2 * ($bottomMargin));\r\n//        right: $sideMargin;\r\n//    }\r\n//}\r\n\r\n//.menuOpen-waybar:hover {\r\n//    @if $uniMargin != 0% {\r\n//        width: calc(((((100% - (2 * $uniMargin)) - (perToInt($waybarHeight) * 1vh)) * $hoverCoefficient) + $hoverConst));\r\n//        height: calc(((($waybarHeight) - 2.25 * (2 * $uniMargin)) * $hoverCoefficient) + $hoverConst);\r\n//        right: calc($uniMargin - (((100% - (2 * $uniMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 4));\r\n//        top: calc(2 * $uniMargin - (((100% - $uniMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));\r\n//    } @else {\r\n//        width: calc((((100% - (2 * $sideMargin)) * $hoverCoefficient) + $hoverConst) - perToInt($waybarHeight) * 1vh);\r\n//        height: calc((((($waybarHeight) - (2.25 * (2 * $bottomMargin)))) * $hoverCoefficient) + $hoverConst);\r\n//        right: calc($sideMargin - (((100% - (2 * $sideMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));\r\n//        top: calc(2 * $bottomMargin - (((100% - $sideMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));\r\n//    }\r\n//}\r\n\r\n//.mainWindow {\r\n//    position: absolute; // Absolute positioning\r\n//    @if $uniMargin != 0% {\r\n//        width: calc((100% - (2 * $uniMargin))); // Width adjusted for uniform margin\r\n//        height: calc(100% - $uniMargin - $waybarHeight); // Height considering uniform margin and waybar height\r\n//        bottom: calc(2 * ($uniMargin));\r\n//        right: $uniMargin;\r\n//    } @else {\r\n//        width: calc((100% - (2 * $sideMargin)));\r\n//        height: calc(100% - $bottomMargin - $waybarHeight);\r\n//        bottom: calc(2 * ($bottomMargin));\r\n//        right: $sideMargin;\r\n//    }\r\n//    border: $borderThickness solid $borderCol; // Border styling\r\n//    box-shadow: $shadowRad $shadowCol;\r\n//    background-color: $windowCol;\r\n//}\r\n//\r\n//.mainWindow:hover {\r\n//    @if $uniMargin != 0% {\r\n//        width: calc((((100% - (2 * $uniMargin))) * $hoverCoefficient) + $hoverConst); // Hover effect for width\r\n//        height: calc(((100% - $uniMargin - $waybarHeight) * $hoverCoefficient) + $hoverConst); // Hover effect for height\r\n//        right: calc($uniMargin - (((100% - (2 * $uniMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));\r\n//        bottom: calc(2 * $uniMargin - (((100% - $uniMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));\r\n//    } @else {\r\n//        width: calc((((100% - (2 * $sideMargin))) * $hoverCoefficient) + $hoverConst);\r\n//        height: calc(((100% - $bottomMargin - $waybarHeight) * $hoverCoefficient) + $hoverConst);\r\n//        right: calc($sideMargin - (((100% - (2 * $sideMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));\r\n//        bottom: calc(2 * $bottomMargin - (((100% - $sideMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));\r\n//    }\r\n//    box-shadow: $shadowRad $shadowCol;\r\n//    background-color: $hoverWindowCol;\r\n//    border: $hoverBorderThickness solid $hoverBorderCol;\r\n\r\n*/\r\n","/* ---------------\r\n*   Huge thanks to riftriot\r\n*   for helping me set up\r\n*   UV on this project\r\n*   Follow his GitHub:\r\n*   https://github.com/Riftriot\r\n*/\r\n\r\n\r\n\r\n// Background\r\n$bgCol: url(https://w.wallhaven.cc/full/wy/wallhaven-wyp7ep.jpg);\r\n  // https://raw.githubusercontent.com/hyprwm/Hyprland/main/assets/wall_anime_4K.png\r\n\r\n// Window Properties\r\n$windowCol: #141414d1; // 12, 26, 28, 0.8\r\n$windowBlur: 1vh;\r\n$windowBrightness: 1;\r\n$windowContrast: 1.1;\r\n\r\n// Shadow properties\r\n$shadowCol: rgba(0, 0, 0, 0.2);\r\n$shadowRad: 7px 7px 7px;\r\n\r\n\r\n// Margins\r\n$uniMargin: 0.5%; // 1, 0.5, 0.225\r\n$bottomMargin: 0.5%;\r\n$sideMargin: 0.5%;\r\n$waybarHeight: 12.5%; // 17.5, 12.5, 7.5\r\n$botBarHeight: 5%;\r\n\r\n// Border\r\n$borderRad: 17px; // 22.5, 12.5, 6\r\n$borderThickness: 1.75px;\r\n$borderCol: #9c9c9c5b;\r\n\r\n// Transitions\r\n$transitionSpeed: 0.4s;\r\n$fastTransitionSpeed: 0.1s;\r\n \r\n// Menu\r\n$menuButtonCol: #ffffff;\r\n\r\n// Active\r\n$activeTransition: $transitionSpeed;\r\n$activeWindowCol: #25252ad1; // 24, 76, 84, 0.6\r\n\r\n// Full Menu\r\n$fullMenuOffScreenBorderGrad: linear-gradient(90deg, #00000000 0%, $borderCol 100%);\r\n$fullMenuOffScreenWindowGrad: linear-gradient(90deg, #00000000 0%, $activeWindowCol 100%);\r\n$fullMenuOffset: 10px;\r\n\r\n// Hover Vars\r\n$hoverConst: 0.7vh; // 0.7, 0.5, 0.25\r\n$hoverCoefficient: 1;\r\n$hoverWindowBlur: 0.7vw;\r\n$hoverWindowBrightness: 1.2;\r\n$hoverWindowContrast: 1.15;\r\n$hoverBorderCol: #e70052e7;\r\n$hoverWindowCol: #25252ae7;\r\n$hoverBorderThickness: 1.5px;\r\n$hoverBorderRad: 0.8;\r\n$hoverBorderOpacity: rgba(255, 255, 255, 0.744);\r\n$hoverShadowCol: rgba(\r\n    calc(red($hoverBorderCol) * red($hoverBorderOpacity) / 255),\r\n    calc(green($hoverBorderCol) * green($hoverBorderOpacity) / 255),\r\n    calc(blue($hoverBorderCol) * blue($hoverBorderOpacity) / 255),\r\n    calc(alpha($hoverBorderCol) * alpha($hoverBorderOpacity))\r\n);\r\n$hoverShadowRad: 0px 0px $fullMenuOffset;\r\n\r\n// Functions\r\n@function perToInt($percent) { // Function to convert percentage to integer\r\n    @return calc($percent / 1%); \r\n}\r\n",".mainWindow {\r\n    position: absolute; // Absolute positioning\r\n    @if $uniMargin != 0% {\r\n        width: calc((100% - (2 * $uniMargin))); // Width adjusted for uniform margin\r\n        height: calc(100% - $uniMargin - $waybarHeight - ($botBarHeight + $uniMargin)); // Height considering uniform margin and waybar height\r\n        bottom: calc(2 * ($uniMargin) + ($botBarHeight + $uniMargin));\r\n        right: $uniMargin;\r\n    } @else {\r\n        width: calc((100% - (2 * $sideMargin)));\r\n        height: calc(100% - $bottomMargin - $waybarHeight - ($botBarHeight + $uniMargin));\r\n        bottom: calc(2 * ($bottomMargin) + ($botBarHeight + $uniMargin));\r\n        right: $sideMargin;\r\n    }\r\n    border: $borderThickness solid $borderCol; // Border styling\r\n    border-radius: $borderRad;\r\n    box-shadow: $shadowRad $shadowCol;\r\n    background-color: $windowCol;\r\n    backdrop-filter:\r\n        blur($windowBlur)\r\n        brightness($windowBrightness)\r\n        contrast($windowContrast);\r\n    box-sizing: border-box; // Ensures consistent box model\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\n    transition: \r\n        background-color $transitionSpeed ease,\r\n        width $transitionSpeed ease,\r\n        height $transitionSpeed ease,\r\n        left $transitionSpeed ease,\r\n        bottom $transitionSpeed ease,\r\n        right $transitionSpeed ease,\r\n        top $transitionSpeed ease,\r\n        border-radius $transitionSpeed ease,\r\n        stroke $transitionSpeed ease,\r\n        backdrop-filter $transitionSpeed ease,\r\n        box-shadow $fastTransitionSpeed ease,\r\n        border $fastTransitionSpeed ease,\r\n        fill $transitionSpeed ease; // Smooth transitions for various properties\r\n}\r\n\r\n.mainWindow:hover {\r\n    user-select: none;\r\n    &.hoverable {\r\n        @if $uniMargin != 0% {\r\n            width: calc((100% - (2 * $uniMargin)) * $hoverCoefficient + $hoverConst);\r\n            height: calc(((100% - $uniMargin - $waybarHeight) * $hoverCoefficient) + $hoverConst - ($botBarHeight + $uniMargin)); // Hover effect for height\r\n            right: calc($uniMargin - (((100% - (2 * $uniMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));\r\n            bottom: calc(2 * $uniMargin - (((100% - $uniMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2) + ($botBarHeight + $uniMargin));\r\n            border-radius: calc(($borderRad * $hoverBorderRad) + (((((perToInt($waybarHeight) * 1vh - ($uniMargin)) * $hoverCoefficient) + ($hoverConst * perToInt($uniMargin)))) - (perToInt($waybarHeight) * 1vh - ($uniMargin))) + (($borderRad * $hoverBorderRad) / ((($borderRad * $hoverBorderRad) / 1px) / 2)));\r\n        } @else {\r\n            width: calc((((100% - (2 * $sideMargin))) * $hoverCoefficient) + $hoverConst);\r\n            height: calc(((100% - $bottomMargin - $waybarHeight) * $hoverCoefficient) + $hoverConst - ($botBarHeight + $uniMargin));\r\n            right: calc($sideMargin - (((100% - (2 * $sideMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));\r\n            bottom: calc(2 * $bottomMargin - (((100% - $sideMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2) + ($botBarHeight + $uniMargin));\r\n            border-radius: calc(($borderRad * $hoverBorderRad) + (((((perToInt($waybarHeight) * 1vh - ($bottomMargin)) * $hoverCoefficient) + ($hoverConst * perToInt($bottomMargin)))) - (perToInt($waybarHeight) * 1vh - ($sideMargin))) + (($borderRad * $hoverBorderRad) / ((($borderRad * $hoverBorderRad) / 1px) / 2)));\r\n        }\r\n        box-shadow: $hoverShadowRad $hoverShadowCol; // Box shadow styling\r\n        border: $hoverBorderThickness solid $hoverBorderCol; // Border styling on hover\r\n        background-color: $hoverWindowCol;\r\n        backdrop-filter:\r\n            blur($hoverWindowBlur)\r\n            brightness($hoverWindowBrightness)\r\n            contrast($hoverWindowContrast);\r\n    }\r\n}\r\n\r\n.menuOpen-mainWindow {\r\n    @if $uniMargin != 0% {\r\n        width: calc(((100% - (2 * $uniMargin))) - (((perToInt($waybarHeight) * 1vh - ($uniMargin))) + (((($waybarHeight) - 2.25 * (2 * $uniMargin))))) - $uniMargin); // Width adjusted for uniform margin\r\n        height: calc(100% - $uniMargin - $waybarHeight - ($botBarHeight + $uniMargin)); // Height considering uniform margin and waybar height\r\n        bottom: calc(2 * ($uniMargin) + ($botBarHeight + $uniMargin));\r\n        right: $uniMargin;\r\n    } @else {\r\n        width: calc((100% - (2 * $sideMargin)) - (((perToInt($waybarHeight) * 1vh - ($sideMargin))) + (((($waybarHeight) - 2.25 * (2 * $sideMargin))))) - $sideMargin);\r\n        height: calc(100% - $bottomMargin - $waybarHeight - ($botBarHeight + $uniMargin));\r\n        bottom: calc(2 * ($bottomMargin) + ($botBarHeight + $uniMargin));\r\n        right: $sideMargin;\r\n    }\r\n    backdrop-filter:\r\n        blur(calc($hoverWindowBlur * 1))\r\n        brightness(calc($hoverWindowBrightness * 1))\r\n        contrast(calc($hoverWindowContrast * 1));\r\n}\r\n\r\n.menuOpen-mainWindow:hover {\r\n    user-select: none;\r\n    &.hoverable {\r\n        @if $uniMargin != 0% {\r\n            width: calc(((((100% - (2 * $uniMargin)) * $hoverCoefficient) + $hoverConst)) - (((perToInt($waybarHeight) * 1vh - ($uniMargin))) + (((($waybarHeight) - 2.25 * (2 * $uniMargin))))) - $uniMargin); // Hover effect for width\r\n            height: calc(((100% - $uniMargin - $waybarHeight) * $hoverCoefficient) + $hoverConst - ($botBarHeight + $uniMargin)); // Hover effect for height\r\n            right: calc($uniMargin - (((100% - (2 * $uniMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 4));\r\n            bottom: calc(2 * $uniMargin - (((100% - $uniMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2) + ($botBarHeight + $uniMargin));\r\n        } @else {\r\n            width: calc(((((100% - (2 * $sideMargin)) * $hoverCoefficient) + $hoverConst)) - (((perToInt($waybarHeight) * 1vh - ($sideMargin))) + (((($waybarHeight) - 2.25 * (2 * $sideMargin))))) - $sideMargin);\r\n            height: calc(((100% - $bottomMargin - $waybarHeight) * $hoverCoefficient) + $hoverConst - ($botBarHeight + $uniMargin));\r\n            right: calc($sideMargin - (((100% - (2 * $sideMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 4));\r\n            bottom: calc(2 * $bottomMargin - (((100% - $sideMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2) + ($botBarHeight + $uniMargin));\r\n        }\r\n        backdrop-filter:\r\n            blur(calc($hoverWindowBlur * 1))\r\n            brightness(calc($hoverWindowBrightness * 1))\r\n            contrast(calc($hoverWindowContrast * 1));\r\n    }\r\n}\r\n",".waybar {\r\n    position: absolute;\r\n    @if $uniMargin != 0% {\r\n        width: calc((100% - (2 * $uniMargin)) - perToInt($waybarHeight) * 1vh); // Width calculation for waybar\r\n        height: calc(($waybarHeight) - 2.25 * (2 * $uniMargin)); // Height adjustment for waybar\r\n        top: calc(2 * ($uniMargin));\r\n        right: $uniMargin;\r\n    } @else {\r\n        width: calc((100% - (2 * $sideMargin)) - perToInt($waybarHeight) * 1vh);\r\n        height: calc((($waybarHeight) - (2.25 * (2 * $bottomMargin))));\r\n        top: calc(2 * ($bottomMargin));\r\n        right: $sideMargin;\r\n    }\r\n    border: $borderThickness solid $borderCol;\r\n    border-radius: $borderRad;\r\n    box-shadow: $shadowRad $shadowCol;\r\n    background-color: $windowCol;\r\n    backdrop-filter:\r\n        blur($windowBlur)\r\n        brightness($windowBrightness)\r\n        contrast($windowContrast);\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\n    transition: \r\n        background-color $transitionSpeed ease,\r\n        width $transitionSpeed ease,\r\n        height $transitionSpeed ease,\r\n        left $transitionSpeed ease,\r\n        bottom $transitionSpeed ease,\r\n        right $transitionSpeed ease,\r\n        top $transitionSpeed ease,\r\n        transform $transitionSpeed ease,\r\n        border-radius $transitionSpeed ease,\r\n        stroke $transitionSpeed ease,\r\n        backdrop-filter $transitionSpeed ease,\r\n        box-shadow $fastTransitionSpeed ease,\r\n        border $fastTransitionSpeed ease,\r\n        fill $transitionSpeed ease;\r\n}\r\n\r\n.waybar:hover {\r\n    @if $uniMargin != 0% {\r\n        width: calc(((((100% - (2 * $uniMargin)) - (perToInt($waybarHeight) * 1vh)) * $hoverCoefficient) + $hoverConst));\r\n        height: calc(((($waybarHeight) - 2.25 * (2 * $uniMargin)) * $hoverCoefficient) + $hoverConst);\r\n        right: calc($uniMargin - (((100% - (2 * $uniMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 4));\r\n        top: calc(2 * $uniMargin - (((100% - $uniMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));\r\n        border-radius: calc(($borderRad * $hoverBorderRad) + (((((perToInt($waybarHeight) * 1vh - ($uniMargin)) * $hoverCoefficient) + ($hoverConst * perToInt($uniMargin)))) - (perToInt($waybarHeight) * 1vh - ($uniMargin))) + (($borderRad * $hoverBorderRad) / ((($borderRad * $hoverBorderRad) / 1px) / 2)));\r\n    } @else {\r\n        width: calc((((100% - (2 * $sideMargin)) * $hoverCoefficient) + $hoverConst) - perToInt($waybarHeight) * 1vh);\r\n        height: calc((((($waybarHeight) - (2.25 * (2 * $bottomMargin)))) * $hoverCoefficient) + $hoverConst);\r\n        right: calc($sideMargin - (((100% - (2 * $sideMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));\r\n        top: calc(2 * $bottomMargin - (((100% - $sideMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));\r\n        border-radius: calc(($borderRad * $hoverBorderRad) + (((((perToInt($waybarHeight) * 1vh - ($bottomMargin)) * $hoverCoefficient) + ($hoverConst * perToInt($bottomMargin)))) - (perToInt($waybarHeight) * 1vh - ($sideMargin))) + (($borderRad * $hoverBorderRad) / ((($borderRad * $hoverBorderRad) / 1px) / 2)));\r\n    }\r\n    box-shadow: $hoverShadowRad $hoverShadowCol; // Box shadow styling\r\n    border: $hoverBorderThickness solid $hoverBorderCol; // Border styling on hover\r\n    background-color: $hoverWindowCol;\r\n    backdrop-filter:\r\n        blur($hoverWindowBlur)\r\n        brightness($hoverWindowBrightness)\r\n        contrast($hoverWindowContrast);\r\n}\r\n\r\n.menuOpen-waybar {\r\n    @if $uniMargin != 0% {\r\n        width: calc(((100% - (2 * $uniMargin))) - (((perToInt($waybarHeight) * 1vh - ($uniMargin))) + (((($waybarHeight) - 2.25 * (2 * $uniMargin))))) - $uniMargin); // Width calculation for waybar\r\n        height: calc(($waybarHeight) - 2.25 * (2 * $uniMargin)); // Height adjustment for waybar\r\n        top: calc(2 * ($uniMargin));\r\n        right: $uniMargin;\r\n    } @else {\r\n        width: calc(((100% - (2 * $sideMargin))) - (((perToInt($waybarHeight) * 1vh - ($sideMargin))) + (((($waybarHeight) - 2.25 * (2 * $sideMargin))))) - $sideMargin);\r\n        height: calc((($waybarHeight) - (2.25 * (2 * $bottomMargin))));\r\n        top: calc(2 * ($bottomMargin));\r\n        right: $sideMargin;\r\n    }\r\n    backdrop-filter:\r\n        blur($hoverWindowBlur)\r\n        brightness($hoverWindowBrightness)\r\n        contrast($hoverWindowContrast);\r\n}\r\n\r\n.menuOpen-waybar:hover {\r\n    @if $uniMargin != 0% {\r\n        width: calc(((((100% - (2 * $uniMargin)) * $hoverCoefficient) + $hoverConst)) - (((perToInt($waybarHeight) * 1vh - ($uniMargin))) + (((($waybarHeight) - 2.25 * (2 * $uniMargin))))) - $uniMargin);\r\n        height: calc(((($waybarHeight) - 2.25 * (2 * $uniMargin)) * $hoverCoefficient) + $hoverConst);\r\n        right: calc($uniMargin - (((100% - (2 * $uniMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 4));\r\n        top: calc(2 * $uniMargin - (((100% - $uniMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));\r\n    } @else {\r\n        width: calc(((((100% - (2 * $sideMargin)) * $hoverCoefficient) + $hoverConst)) - (((perToInt($waybarHeight) * 1vh - ($sideMargin))) + (((($waybarHeight) - 2.25 * (2 * $sideMargin))))) - $sideMargin);\r\n        height: calc(((($waybarHeight) - 2.25 * (2 * $bottomMargin)) * $hoverCoefficient) + $hoverConst);\r\n        right: calc($sideMargin - (((100% - (2 * $sideMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 4));\r\n        top: calc(2 * $bottomMargin - (((100% - $sideMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));\r\n    }\r\n}",".iframeWindow {\r\n    position: absolute; // Absolute positioning\r\n    @if $uniMargin != 0% {\r\n        width: calc((100% - (2 * $uniMargin))); // Width adjusted for uniform margin\r\n        height: calc(100% - $uniMargin - $waybarHeight - ($botBarHeight + $uniMargin)); // Height considering uniform margin and waybar height\r\n        bottom: calc(2 * ($uniMargin) + ($botBarHeight + $uniMargin));\r\n        right: $uniMargin;\r\n    } @else {\r\n        width: calc((100% - (2 * $sideMargin)));\r\n        height: calc(100% - $bottomMargin - $waybarHeight - ($botBarHeight + $uniMargin));\r\n        bottom: calc(2 * ($bottomMargin) + ($botBarHeight + $uniMargin));\r\n        right: $sideMargin;\r\n    }\r\n    border: $borderThickness solid $borderCol; // Border styling\r\n    border-radius: $borderRad;\r\n    box-shadow: $shadowRad $shadowCol;\r\n    box-sizing: border-box; // Ensures consistent box model\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\n    transition: \r\n        width $transitionSpeed ease,\r\n        height $transitionSpeed ease,\r\n        left $transitionSpeed ease,\r\n        bottom $transitionSpeed ease,\r\n        right $transitionSpeed ease,\r\n        top $transitionSpeed ease,\r\n        border-radius $transitionSpeed ease,\r\n        box-shadow $fastTransitionSpeed ease,\r\n        border $fastTransitionSpeed ease,\r\n        fill $transitionSpeed ease; // Smooth transitions for various properties\r\n}\r\n\r\n.iframeWindow:hover {\r\n    user-select: none;\r\n    &.hoverable {\r\n        @if $uniMargin != 0% {\r\n            width: calc((100% - (2 * $uniMargin)) * $hoverCoefficient + $hoverConst);\r\n            height: calc(((100% - $uniMargin - $waybarHeight) * $hoverCoefficient) + $hoverConst - ($botBarHeight + $uniMargin)); // Hover effect for height\r\n            right: calc($uniMargin - (((100% - (2 * $uniMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));\r\n            bottom: calc(2 * $uniMargin - (((100% - $uniMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2) + ($botBarHeight + $uniMargin));\r\n            border-radius: calc(($borderRad * $hoverBorderRad) + (((((perToInt($waybarHeight) * 1vh - ($uniMargin)) * $hoverCoefficient) + ($hoverConst * perToInt($uniMargin)))) - (perToInt($waybarHeight) * 1vh - ($uniMargin))) + (($borderRad * $hoverBorderRad) / ((($borderRad * $hoverBorderRad) / 1px) / 2)));\r\n        } @else {\r\n            width: calc((((100% - (2 * $sideMargin))) * $hoverCoefficient) + $hoverConst);\r\n            height: calc(((100% - $bottomMargin - $waybarHeight) * $hoverCoefficient) + $hoverConst - ($botBarHeight + $uniMargin));\r\n            right: calc($sideMargin - (((100% - (2 * $sideMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));\r\n            bottom: calc(2 * $bottomMargin - (((100% - $sideMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2) + ($botBarHeight + $uniMargin));\r\n            border-radius: calc(($borderRad * $hoverBorderRad) + (((((perToInt($waybarHeight) * 1vh - ($bottomMargin)) * $hoverCoefficient) + ($hoverConst * perToInt($bottomMargin)))) - (perToInt($waybarHeight) * 1vh - ($sideMargin))) + (($borderRad * $hoverBorderRad) / ((($borderRad * $hoverBorderRad) / 1px) / 2)));\r\n        }\r\n        box-shadow: $hoverShadowRad $hoverShadowCol; // Box shadow styling\r\n        border: $hoverBorderThickness solid $hoverBorderCol; // Border styling on hover\r\n    }\r\n}\r\n\r\n.menuOpen-iframeWindow {\r\n    @if $uniMargin != 0% {\r\n        width: calc(((100% - (2 * $uniMargin))) - (((perToInt($waybarHeight) * 1vh - ($uniMargin))) + (((($waybarHeight) - 2.25 * (2 * $uniMargin))))) - $uniMargin); // Width adjusted for uniform margin\r\n        height: calc(100% - $uniMargin - $waybarHeight - ($botBarHeight + $uniMargin)); // Height considering uniform margin and waybar height\r\n        bottom: calc(2 * ($uniMargin) + ($botBarHeight + $uniMargin));\r\n        right: $uniMargin;\r\n    } @else {\r\n        width: calc((100% - (2 * $sideMargin)) - (((perToInt($waybarHeight) * 1vh - ($sideMargin))) + (((($waybarHeight) - 2.25 * (2 * $sideMargin))))) - $sideMargin);\r\n        height: calc(100% - $bottomMargin - $waybarHeight - ($botBarHeight + $uniMargin));\r\n        bottom: calc(2 * ($bottomMargin) + ($botBarHeight + $uniMargin));\r\n        right: $sideMargin;\r\n    }\r\n}\r\n\r\n.menuOpen-iframeWindow:hover {\r\n    user-select: none;\r\n    &.hoverable {\r\n        @if $uniMargin != 0% {\r\n            width: calc(((((100% - (2 * $uniMargin)) * $hoverCoefficient) + $hoverConst)) - (((perToInt($waybarHeight) * 1vh - ($uniMargin))) + (((($waybarHeight) - 2.25 * (2 * $uniMargin))))) - $uniMargin); // Hover effect for width\r\n            height: calc(((100% - $uniMargin - $waybarHeight) * $hoverCoefficient) + $hoverConst - ($botBarHeight + $uniMargin)); // Hover effect for height\r\n            right: calc($uniMargin - (((100% - (2 * $uniMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 4));\r\n            bottom: calc(2 * $uniMargin - (((100% - $uniMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2) + ($botBarHeight + $uniMargin));\r\n        } @else {\r\n            width: calc(((((100% - (2 * $sideMargin)) * $hoverCoefficient) + $hoverConst)) - (((perToInt($waybarHeight) * 1vh - ($sideMargin))) + (((($waybarHeight) - 2.25 * (2 * $sideMargin))))) - $sideMargin);\r\n            height: calc(((100% - $bottomMargin - $waybarHeight) * $hoverCoefficient) + $hoverConst - ($botBarHeight + $uniMargin));\r\n            right: calc($sideMargin - (((100% - (2 * $sideMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 4));\r\n            bottom: calc(2 * $bottomMargin - (((100% - $sideMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2) + ($botBarHeight + $uniMargin));\r\n        }\r\n    }\r\n}\r\n",".menu {\r\n    position: absolute; // Absolute positioning\r\n    // Conditional styling based on $uniMargin variable\r\n    .menuIcon {\r\n        fill: $menuButtonCol; // Fill color for menu button\r\n        stroke: $menuButtonCol; // Stroke color for menu button\r\n        height: $waybarHeight * 9;\r\n        transition: none;\r\n    }\r\n    .menuLogo {\r\n        font-style: normal;\r\n        text-decoration: none;\r\n        font-family: 'Open Sans';\r\n        fill: #00000000; // Fill color for menu button\r\n        stroke: #00000000; // Stroke color for menu button\r\n        color: transparent;\r\n        user-select: none;\r\n        cursor: default;\r\n        font-size: 0;\r\n    }\r\n    @if $uniMargin != 0% {\r\n        width: calc(12.5vh - $uniMargin); // Width calculation for menu\r\n        height: calc(($waybarHeight) - 2.25 * (2 * $uniMargin)); // Height calculation for menu\r\n        top: calc(2 * ($uniMargin));\r\n        left: $uniMargin;\r\n    } @else {\r\n        width: calc(perToInt($waybarHeight) * 1vh - $sideMargin); // Width calculation for menu\r\n        height: calc(($waybarHeight) - 2.25 * (2 * $bottomMargin)); // Height calculation for menu\r\n        top: calc(2 * ($bottomMargin));\r\n        left: $sideMargin;\r\n    }\r\n    border: $borderThickness solid $borderCol; // Border styling\r\n    border-radius: $borderRad; // Border radius\r\n    box-shadow: $shadowRad $shadowCol; // Box shadow styling\r\n    background-color: $windowCol; // Background color\r\n    // Backdrop filter for visual effects\r\n    backdrop-filter:\r\n        blur($windowBlur)\r\n        brightness($windowBrightness)\r\n        contrast($windowContrast);\r\n    box-sizing: border-box; // Ensures consistent box model\r\n    display: flex; // Flex display for inner content\r\n    align-items: center; // Vertical alignment\r\n    justify-content: center; // Horizontal alignment\r\n    text-align: center; // Text alignment\r\n    // Transition effects for various properties\r\n    transition: \r\n        background-color $transitionSpeed ease,\r\n        width $transitionSpeed ease,\r\n        height $transitionSpeed ease,\r\n        left $transitionSpeed ease,\r\n        bottom $transitionSpeed ease,\r\n        right $transitionSpeed ease,\r\n        top $transitionSpeed ease,\r\n        transform $transitionSpeed ease,\r\n        box-shadow $fastTransitionSpeed ease,\r\n        border $fastTransitionSpeed ease,\r\n        border-radius $transitionSpeed ease,\r\n        stroke $transitionSpeed ease,\r\n        fill $transitionSpeed ease,\r\n        font-size $transitionSpeed ease;\r\n}\r\n\r\n.menu:hover {\r\n    // Conditional hover styling for menu\r\n    @if $uniMargin != 0% {\r\n        width: calc((((perToInt($waybarHeight) * 1vh - $uniMargin) * $hoverCoefficient) + $hoverConst)); // Width adjustment on hover\r\n        height: calc(((($waybarHeight) - 2.25 * (2 * $uniMargin)) * $hoverCoefficient) + $hoverConst); // Height adjustment on hover\r\n        left: calc($uniMargin - (((100% - (2 * $uniMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2)); // Left position adjustment on hover\r\n        top: calc(2 * $uniMargin - (((100% - $uniMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2)); // Top position adjustment on hover\r\n        border-radius: calc(($borderRad * $hoverBorderRad) + (((((perToInt($waybarHeight) * 1vh - ($uniMargin)) * $hoverCoefficient) + ($hoverConst * perToInt($uniMargin)))) - (perToInt($waybarHeight) * 1vh - ($uniMargin))) + (($borderRad * $hoverBorderRad) / ((($borderRad * $hoverBorderRad) / 1px) / 2)));\r\n    } @else {\r\n        width: calc((((perToInt($waybarHeight) * 1vh - $sideMargin) * $hoverCoefficient) + $hoverConst)); // Width adjustment on hover\r\n        height: calc(((($waybarHeight) - 2.25 * (2 * $bottomMargin)) * $hoverCoefficient) + $hoverConst); // Height adjustment on hover\r\n        left: calc($sideMargin - (((100% - (2 * $sideMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2)); // Left position adjustment on hover\r\n        top: calc(2 * $bottomMargin - (((100% - $bottomMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2)); // Top position adjustment on hover\r\n        border-radius: calc(($borderRad * $hoverBorderRad) + (((((perToInt($waybarHeight) * 1vh - ($bottomMargin)) * $hoverCoefficient) + ($hoverConst * perToInt($bottomMargin)))) - (perToInt($waybarHeight) * 1vh - ($sideMargin))) + (($borderRad * $hoverBorderRad) / ((($borderRad * $hoverBorderRad) / 1px) / 2)));\r\n    }\r\n    background-color: $hoverWindowCol; // Background color on hover\r\n    box-shadow: $hoverShadowRad $hoverShadowCol; // Box shadow styling\r\n    border: $hoverBorderThickness solid $hoverBorderCol; // Border styling on hover\r\n    // Backdrop filter adjustments on hover\r\n    backdrop-filter:\r\n        blur($hoverWindowBlur)\r\n        brightness($hoverWindowBrightness)\r\n        contrast($hoverWindowContrast);\r\n}\r\n\r\n.menu.menuOpen {\r\n    position: absolute; // Absolute positioning\r\n    // Conditional styling based on $uniMargin variable\r\n    .menuIcon {\r\n        fill: #00000000; // Fill color for menu button\r\n        stroke: #00000000; // Stroke color for menu button\r\n        height: 0.00000000001;\r\n        width: 0.00000000001;\r\n    }\r\n    .menuLogo {\r\n        fill: $menuButtonCol; // Fill color for menu button\r\n        stroke: $menuButtonCol; // Stroke color for menu button\r\n        color: aliceblue;\r\n        cursor: pointer;\r\n        font-size: 7vh;\r\n        font: 'Open Sans';\r\n        text-decoration: none;\r\n    }\r\n    @if $uniMargin != 0% {\r\n        width: calc(((perToInt($waybarHeight) * 1vh - ($uniMargin))) + (((($waybarHeight) - 2.25 * (2 * $uniMargin))))); // Width calculation for menu\r\n        height: calc(($waybarHeight) - 2.25 * (2 * $uniMargin)); // Height calculation for menu\r\n        top: calc(2 * ($uniMargin));\r\n        left: $uniMargin;\r\n    } @else {\r\n        width: calc(((perToInt($waybarHeight) * 1vh - ($sideMargin))) + (((($waybarHeight) - 2.25 * (2 * $sideMargin))))); // Width calculation for menu\r\n        height: calc(($waybarHeight) - 2.25 * (2 * $bottomMargin)); // Height calculation for menu\r\n        top: calc(2 * ($bottomMargin));\r\n        left: $sideMargin;\r\n    }\r\n    border: $borderThickness solid $borderCol; // Border styling\r\n    border-radius: $borderRad; // Border radius\r\n    background-color: $activeWindowCol; // Background color\r\n    // Backdrop filter for visual effects\r\n    backdrop-filter:\r\n        blur(calc($hoverWindowBlur / 8))\r\n        brightness($windowBrightness)\r\n        contrast($windowContrast);\r\n    box-sizing: border-box; // Ensures consistent box model\r\n    display: flex; // Flex display for inner content\r\n    align-items: center; // Vertical alignment\r\n    justify-content: center; // Horizontal alignment\r\n    text-align: center; // Text alignment\r\n    // Transition effects for various properties\r\n    transition: \r\n        background-color $transitionSpeed ease,\r\n        width $transitionSpeed ease,\r\n        height $transitionSpeed ease,\r\n        left $transitionSpeed ease,\r\n        bottom $transitionSpeed ease,\r\n        right $transitionSpeed ease,\r\n        top $transitionSpeed ease,\r\n        transform $transitionSpeed ease,\r\n        border-radius $transitionSpeed ease,\r\n        stroke $transitionSpeed ease,\r\n        backdrop-filter $transitionSpeed ease,\r\n        fill $transitionSpeed ease;\r\n\r\n}\r\n\r\n.menu.menuOpen:hover {\r\n    @if $uniMargin != 0% {\r\n        width: calc((((perToInt($waybarHeight) * 1vh - ($uniMargin / (4 / 3)))) + (((($waybarHeight) - 2.25 * (2 * $uniMargin))))) * $hoverCoefficient + $hoverConst); // Width adjustment on hover\r\n        height: calc((($waybarHeight) - 2.25 * (2 * $uniMargin)) * $hoverCoefficient + $hoverConst); // Height adjustment on hover\r\n        left: calc($uniMargin - (((100% - (2 * $uniMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2)); // Left position adjustment on hover\r\n        top: calc(2 * $uniMargin - (((100% - $uniMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2)); // Top position adjustment on hover\r\n        border-radius: calc(($borderRad * $hoverBorderRad) + (((((perToInt($waybarHeight) * 1vh - ($uniMargin)) * $hoverCoefficient) + ($hoverConst * perToInt($uniMargin)))) - (perToInt($waybarHeight) * 1vh - ($uniMargin))) + (($borderRad * $hoverBorderRad) / ((($borderRad * $hoverBorderRad) / 1px) / 2)));\r\n    } @else {\r\n        width: calc(((((perToInt($waybarHeight) * 1vh - ($sideMargin / (4 / 3)))) + (((($waybarHeight) - 2.25 * (2 * $sideMargin)))) * (1 / $hoverCoefficient)) - ($hoverConst / 2))); // Width adjustment on hover\r\n        height: calc(((($waybarHeight) - 2.25 * (2 * $bottomMargin)) * (1 / $hoverCoefficient)) - ($hoverConst / 2)); // Height adjustment on hover\r\n        left: calc($sideMargin - (((100% - (2 * $sideMargin)) * ($hoverCoefficient - 1)) / 2) + ($hoverConst / 2) - ($sideMargin / 2)); // Left position adjustment on hover\r\n        top: calc(2 * $bottomMargin - (((100% - $bottomMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) + ($hoverConst / 2)); // Top position adjustment on hover\r\n        border-radius: calc(($borderRad * $hoverBorderRad) + (((((perToInt($waybarHeight) * 1vh - ($bottomMargin)) * $hoverCoefficient) + ($hoverConst * perToInt($bottomMargin)))) - (perToInt($waybarHeight) * 1vh - ($sideMargin))) + (($borderRad * $hoverBorderRad) / ((($borderRad * $hoverBorderRad) / 1px) / 2)));\r\n    }\r\n    box-shadow: $hoverShadowRad $hoverShadowCol; // Box shadow styling\r\n    background-color: $activeWindowCol; // Background color\r\n    border: $hoverBorderThickness solid $hoverBorderCol; // Border styling on hover\r\n    // Backdrop filter adjustments on hover\r\n    backdrop-filter:\r\n        blur(calc($hoverWindowBlur / 6))\r\n        brightness(calc($hoverWindowBrightness - 0.3))\r\n        contrast($hoverWindowContrast);\r\n}\r\n.fullMenu {\r\n    position: absolute; // Absolute positioning\r\n    @if $uniMargin != 0% {\r\n        width: calc(((perToInt($waybarHeight) * 1vh - ($uniMargin))) + (((($waybarHeight) - 2.25 * (2 * $uniMargin)))));\r\n        height: calc(100% - $bottomMargin - $waybarHeight - ($botBarHeight + $uniMargin));\r\n        bottom: calc(2 * ($uniMargin) + ($botBarHeight + $uniMargin));\r\n        left: -20%;\r\n    } @else {\r\n        width: calc(((perToInt($waybarHeight) * 1vh - ($sideMargin))) + (((($waybarHeight) - 2.25 * (2 * $sideMargin)))));\r\n        height: calc(100% - $uniMargin - $waybarHeight - ($botBarHeight + $uniMargin));\r\n        bottom: calc(2 * ($bottomMargin) + ($botBarHeight + $uniMargin));\r\n        left: -20%;\r\n    }\r\n    box-shadow: 0px 0px 0px #00000000;\r\n    border: $borderThickness solid $fullMenuOffScreenBorderGrad;\r\n    background-color: $fullMenuOffScreenWindowGrad;\r\n    transition:\r\n        background-color $transitionSpeed ease,\r\n        width $transitionSpeed ease,\r\n        height $transitionSpeed ease,\r\n        left $transitionSpeed ease,\r\n        bottom $transitionSpeed ease,\r\n        right $transitionSpeed ease,\r\n        top $transitionSpeed ease,\r\n        transform $transitionSpeed ease,\r\n        border-radius $transitionSpeed ease,\r\n        stroke $transitionSpeed ease,\r\n        border $transitionSpeed ease,\r\n        box-shadow $transitionSpeed ease,\r\n        backdrop-filter $transitionSpeed ease,\r\n        fill $transitionSpeed ease;\r\n}\r\n.menuOpen-fullMenu {\r\n    @if $uniMargin != 0% {\r\n        width: calc(((perToInt($waybarHeight) * 1vh - ($uniMargin))) + (((($waybarHeight) - 2.25 * (2 * $uniMargin))))); // Width calculation for menu\r\n        height: calc(100% - $uniMargin - $waybarHeight - ($botBarHeight + $uniMargin)); // Height calculation for menu\r\n        bottom: calc(2 * ($uniMargin) + ($botBarHeight + $uniMargin));\r\n        left: $uniMargin;\r\n    } @else {\r\n        width: calc(((perToInt($waybarHeight) * 1vh - ($sideMargin))) + (((($waybarHeight) - 2.25 * (2 * $sideMargin))))); // Width calculation for menu\r\n        height: calc(100% - $bottomMargin - $waybarHeight - ($botBarHeight + $uniMargin)); // Height calculation for menu\r\n        bottom: calc(2 * ($bottomMargin) + ($botBarHeight + $uniMargin));\r\n        left: $sideMargin;\r\n    }\r\n    border: $borderThickness solid $borderCol; // Border styling\r\n    border-radius: $borderRad; // Border radius\r\n    background-color: $activeWindowCol; // Background color\r\n    // Backdrop filter for visual effects\r\n    backdrop-filter:\r\n        blur(calc($hoverWindowBlur / 8))\r\n        brightness($windowBrightness)\r\n        contrast($windowContrast);\r\n    box-sizing: border-box; // Ensures consistent box model\r\n    display: flex; // Flex display for inner content\r\n    align-items: center; // Vertical alignment\r\n    justify-content: center; // Horizontal alignment\r\n    text-align: center; // Text alignment\r\n    // Transition effects for various properties\r\n    transition:\r\n        background-color $transitionSpeed ease,\r\n        width $transitionSpeed ease,\r\n        height $transitionSpeed ease,\r\n        left $transitionSpeed ease,\r\n        bottom $transitionSpeed ease,\r\n        right $transitionSpeed ease,\r\n        top $transitionSpeed ease,\r\n        transform $transitionSpeed ease,\r\n        border-radius $transitionSpeed ease,\r\n        stroke $transitionSpeed ease,\r\n        border $transitionSpeed ease,\r\n        box-shadow $transitionSpeed ease,\r\n        backdrop-filter $transitionSpeed ease,\r\n        fill $transitionSpeed ease;\r\n}\r\n\r\n.menuOpen-fullMenu:hover {\r\n    @if $uniMargin != 0% {\r\n        width: calc((((perToInt($waybarHeight) * 1vh - ($uniMargin / (4 / 3)))) + (((($waybarHeight) - 2.25 * (2 * $uniMargin))))) * $hoverCoefficient + $hoverConst); // Width calculation for menu\r\n        height: calc(((100% - $uniMargin - $waybarHeight) * $hoverCoefficient) + $hoverConst - ($botBarHeight + $uniMargin)); // Height calculation for menu\r\n        bottom: calc(2 * $uniMargin - (((100% - $uniMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2) + ($botBarHeight + $uniMargin));\r\n        left: calc($uniMargin - (((100% - (2 * $uniMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));\r\n        border-radius: calc(($borderRad * $hoverBorderRad) + (((((perToInt($waybarHeight) * 1vh - ($uniMargin)) * $hoverCoefficient) + ($hoverConst * perToInt($uniMargin)))) - (perToInt($waybarHeight) * 1vh - ($uniMargin))) + (($borderRad * $hoverBorderRad) / ((($borderRad * $hoverBorderRad) / 1px) / 2)));\r\n    } @else {\r\n        width: calc(((((perToInt($waybarHeight) * 1vh - ($sideMargin / (4 / 3)))) + (((($waybarHeight) - 2.25 * (2 * $sideMargin)))) * (1 / $hoverCoefficient)) - ($hoverConst / 2))); // Width calculation for menu\r\n        height: calc(100% - $bottomMargin - $waybarHeight - ($botBarHeight + $uniMargin)); // Height calculation for menu\r\n        bottom: calc(2 * ($bottomMargin - (((100% - (2 * $bottomMargin)) * ($hoverCoefficient - 1)) / 2) + ($hoverConst / 2) - ($bottomMargin / 2)) + ($botBarHeight + $uniMargin));\r\n        left: calc($sideMargin - (((100% - (2 * $sideMargin)) * ($hoverCoefficient - 1)) / 2) + ($hoverConst / 2) - ($sideMargin / 2));\r\n        border-radius: calc(($borderRad * $hoverBorderRad) + (((((perToInt($waybarHeight) * 1vh - ($bottomMargin)) * $hoverCoefficient) + ($hoverConst * perToInt($bottomMargin)))) - (perToInt($waybarHeight) * 1vh - ($sideMargin))) + (($borderRad * $hoverBorderRad) / ((($borderRad * $hoverBorderRad) / 1px) / 2)));\r\n    }\r\n    box-shadow: $hoverShadowRad $hoverShadowCol; // Box shadow styling\r\n    background-color: $activeWindowCol; // Background color\r\n    border: $hoverBorderThickness solid $hoverBorderCol; // Border styling on hover\r\n    // Backdrop filter adjustments on hover\r\n    backdrop-filter:\r\n        blur(calc($hoverWindowBlur / 6))\r\n        brightness(calc($hoverWindowBrightness - 0.3))\r\n        contrast($hoverWindowContrast);\r\n}\r\n",".botBar {\r\n    user-select: none;\r\n    font-style: normal;\r\n    text-decoration: none;\r\n    font-family: 'Open Sans';\r\n    position: absolute;\r\n    font-size: 2.75vh;\r\n    margin: 0;\r\n    padding: 0;\r\n    bottom: 2 * $uniMargin;\r\n    color: #fdfdfd;\r\n    height: $botBarHeight - $uniMargin;\r\n    border: $borderThickness solid $borderCol;\r\n    border-radius: $borderRad;\r\n    box-shadow: $shadowRad $shadowCol;\r\n    backdrop-filter:\r\n        blur($windowBlur)\r\n        brightness($windowBrightness)\r\n        contrast($windowContrast);\r\n    box-sizing: border-box;\r\n    transition:\r\n        background-color $transitionSpeed ease,\r\n        transform $transitionSpeed ease,\r\n        width $transitionSpeed ease,\r\n        height $transitionSpeed ease,\r\n        left $transitionSpeed ease,\r\n        bottom $transitionSpeed ease,\r\n        right $transitionSpeed ease,\r\n        top $transitionSpeed ease,\r\n        border-radius $transitionSpeed ease,\r\n        stroke $transitionSpeed ease,\r\n        backdrop-filter $transitionSpeed ease,\r\n        box-shadow $fastTransitionSpeed ease,\r\n        border $fastTransitionSpeed ease,\r\n        fill $transitionSpeed ease;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: $windowCol;\r\n\r\n    &:hover {\r\n        height: calc((($botBarHeight - $uniMargin) * $hoverCoefficient) + ($hoverConst));\r\n        bottom: calc(2 * $uniMargin - (((100% - $uniMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));\r\n        box-shadow: $hoverShadowRad $hoverShadowCol;\r\n        border: $hoverBorderThickness solid $hoverBorderCol;\r\n        background-color: $hoverWindowCol;\r\n        backdrop-filter:\r\n            blur($hoverWindowBlur)\r\n            brightness($hoverWindowBrightness)\r\n            contrast($hoverWindowContrast);\r\n    }\r\n}\r\n\r\n.hidden {\r\n    display: none;\r\n}\r\n\r\n.clock {\r\n    left: 48%;\r\n    transform: translateX(-50%);\r\n    width: 7%;\r\n\r\n    &:hover {\r\n        width: calc(7% * $hoverCoefficient + ($hoverConst / 2));\r\n        cursor: pointer;\r\n    }\r\n}\r\n\r\n.discord {\r\n    left: $uniMargin + 4.5%;\r\n    width: 9%;\r\n    transform: translateX(-50%);\r\n\r\n    &:hover {\r\n        width: calc(9% * $hoverCoefficient + ($hoverConst / 2));\r\n    }\r\n}\r\n\r\n/*\r\n.bottomBarThing {\r\n    left: whereItShouldBe + (width% / 2);\r\n    right: whereItShouldBe + (width% / 2);\r\n\r\n    width: width%;\r\n\r\n    transform: translateX(-50%); // left\r\n    transform: translateX(50%); // right\r\n\r\n    &:hover {\r\n        width: calc(width% * $hoverCoefficient + ($hoverConst / 2));\r\n    }\r\n}\r\n*/\r\n\r\n.githubLink {\r\n    left: 2 * $uniMargin + 9% + 4%;\r\n    width: 8%;\r\n    transform: translateX(-50%);\r\n\r\n    &:hover {\r\n        width: calc(8% * $hoverCoefficient + ($hoverConst / 2));\r\n    }\r\n}\r\n\r\n.email {\r\n    right: $uniMargin + 4%;\r\n    width: 8%;\r\n    transform: translateX(50%);\r\n\r\n    &:hover {\r\n        width: calc(8% * $hoverCoefficient + ($hoverConst / 2));\r\n    }\r\n}\r\n\r\n.credits {\r\n    right: 2 * $uniMargin + 8% + 4%;\r\n    width: 8%;\r\n    transform: translateX(50%);\r\n\r\n    &:hover {\r\n        width: calc(8% * $hoverCoefficient + ($hoverConst / 2));\r\n    }\r\n}\r\n\r\n.battery {\r\n    left: 51.5% + $uniMargin + 2.5%;\r\n    transform: translateX(-50%);\r\n    width: 5%;\r\n\r\n    &:hover {\r\n        width: calc(5% * $hoverCoefficient + ($hoverConst / 2));\r\n        cursor: pointer;\r\n    }\r\n}\r\n",".hidden {\r\n    display: none;\r\n}\r\n\r\n#emailPopup {\r\n    display: flex;\r\n    width: 30%;\r\n    height: 20%;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 10000;\r\n    user-select: none;\r\n    font-style: normal;\r\n    text-decoration: none;\r\n    font-family: 'Open Sans';\r\n    font-size: 2.75vh;\r\n    margin: 0;\r\n    padding: 0;\r\n    bottom: 2 * $uniMargin;\r\n    color: #fdfdfd;\r\n    border: $borderThickness solid $borderCol;\r\n    border-radius: $borderRad;\r\n    box-shadow: $shadowRad $shadowCol;\r\n    backdrop-filter:\r\n        blur($windowBlur)\r\n        brightness($windowBrightness)\r\n        contrast($windowContrast);\r\n    box-sizing: border-box;\r\n    transition: \r\n        background-color $transitionSpeed ease,\r\n        width $transitionSpeed ease,\r\n        height $transitionSpeed ease,\r\n        left $transitionSpeed ease,\r\n        bottom $transitionSpeed ease,\r\n        right $transitionSpeed ease,\r\n        top $transitionSpeed ease,\r\n        border-radius $transitionSpeed ease,\r\n        stroke $transitionSpeed ease,\r\n        backdrop-filter $transitionSpeed ease,\r\n        box-shadow $fastTransitionSpeed ease,\r\n        border $fastTransitionSpeed ease,\r\n        fill $transitionSpeed ease;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: $windowCol;\r\n    &:hover {\r\n        height: calc(((20%) * $hoverCoefficient) + $hoverConst);\r\n        width: calc(((30%) * $hoverCoefficient) + $hoverConst);\r\n        bottom: calc(2 * $uniMargin - (((100% - $uniMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));\r\n        box-shadow: $hoverShadowRad $hoverShadowCol;\r\n        border: $hoverBorderThickness solid $hoverBorderCol;\r\n        background-color: $hoverWindowCol;\r\n        backdrop-filter:\r\n            blur($hoverWindowBlur)\r\n            brightness($hoverWindowBrightness)\r\n            contrast($hoverWindowContrast);\r\n    }\r\n    &.hidden {\r\n        display: none;\r\n    }\r\n}\r\n\r\n#emailPopupBg {\r\n    display: flex;\r\n    position: absolute;\r\n    padding: 0;\r\n    margin: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000000da;\r\n    backdrop-filter: blur(1vh);\r\n    z-index: 1000;\r\n    &.hidden {\r\n        display: none;\r\n    }\r\n}\r\n\r\n#creditsPopup {\r\n    display: flex;\r\n    width: 30%;\r\n    height: 20%;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 10000;\r\n    user-select: none;\r\n    font-style: normal;\r\n    text-decoration: none;\r\n    font-family: 'Open Sans';\r\n    font-size: 2.75vh;\r\n    margin: 0;\r\n    padding: 0;\r\n    bottom: 2 * $uniMargin;\r\n    color: #fdfdfd;\r\n    border: $borderThickness solid $borderCol;\r\n    border-radius: $borderRad;\r\n    box-shadow: $shadowRad $shadowCol;\r\n    backdrop-filter:\r\n        blur($windowBlur)\r\n        brightness($windowBrightness)\r\n        contrast($windowContrast);\r\n    box-sizing: border-box;\r\n    transition:\r\n        background-color $transitionSpeed ease,\r\n        width $transitionSpeed ease,\r\n        height $transitionSpeed ease,\r\n        left $transitionSpeed ease,\r\n        bottom $transitionSpeed ease,\r\n        right $transitionSpeed ease,\r\n        top $transitionSpeed ease,\r\n        border-radius $transitionSpeed ease,\r\n        stroke $transitionSpeed ease,\r\n        backdrop-filter $transitionSpeed ease,\r\n        box-shadow $fastTransitionSpeed ease,\r\n        border $fastTransitionSpeed ease,\r\n        fill $transitionSpeed ease;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: $windowCol;\r\n    &:hover {\r\n        height: calc(((20%) * $hoverCoefficient) + $hoverConst);\r\n        width: calc(((30%) * $hoverCoefficient) + $hoverConst);\r\n        bottom: calc(2 * $uniMargin - (((100% - $uniMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));\r\n        box-shadow: $hoverShadowRad $hoverShadowCol;\r\n        border: $hoverBorderThickness solid $hoverBorderCol;\r\n        background-color: $hoverWindowCol;\r\n        backdrop-filter:\r\n            blur($hoverWindowBlur)\r\n            brightness($hoverWindowBrightness)\r\n            contrast($hoverWindowContrast);\r\n    }\r\n    &.hidden {\r\n        display: none;\r\n    }\r\n}\r\n\r\n#creditsPopupBg {\r\n    display: flex;\r\n    position: absolute;\r\n    padding: 0;\r\n    margin: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000000da;\r\n    backdrop-filter: blur(1vh);\r\n    z-index: 1000;\r\n    &.hidden {\r\n        display: none;\r\n    }\r\n}\r\n\r\n\r\n// add this later to animate email and credits disapear once your braincells reapear:\r\n\r\n/*\r\n  &.hidden {\r\n        background-color: #00000000;\r\n        backdrop-filter: blur(0px);\r\n        width: 20%;\r\n        height: 15%;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        color: #00000000;\r\n        border: 0 solid #00000000;\r\n        border-radius: $borderRad * 1.25;\r\n        box-shadow: 0 0 0 #00000000;\r\n        visibility: hidden;\r\n        transition-delay: 1s\r\n  }\r\n*/"]}